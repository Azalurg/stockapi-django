version: '3'

services:

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/usr/share/nginx/html/static
      - ./media:/usr/share/nginx/html/media
    ports:
      - "80:80"
    restart: unless-stopped

  db:
    image: postgres:latest
    environment:
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    expose:
      - "5432"
    restart: unless-stopped
    env_file:
      - .env.docker

  gunicorn:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh start-gunicorn.sh
    expose:
      - "8000"
    depends_on:
      - db
      - celery-worker
      - celery-beat
    env_file:
      - .env.docker
    restart: unless-stopped

  daphne:
    build:
      context: .
      dockerfile: Dockerfile
    command: daphne -b 0.0.0.0 -p 8001 stockProject.asgi:application
    expose:
      - "8001"
    depends_on:
      - gunicorn
      - redis-service
    env_file:
      - .env.docker
    restart: unless-stopped

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A stockProject worker -l info
    depends_on:
      - db
      - redis-service
      - rabbitmq-service
    env_file:
      - .env.docker

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A stockProject beat -l info
    depends_on:
      - celery-worker
    env_file:
      - .env.docker
    restart: unless-stopped

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --broker=amqp://guest:guest@rabbitmq-service:5672// flower
    ports:
      - "5555:5555"
    depends_on:
      - celery-worker
    env_file:
      - .env.docker
    restart: unless-stopped


  rabbitmq-service:
    image: rabbitmq:latest
    expose:
      - "5672"
      - "15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped

  redis-service:
    image: redis:latest
    expose:
      - "6379"
    restart: unless-stopped

volumes:
  postgres:
